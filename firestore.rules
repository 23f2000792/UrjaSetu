rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isRole(role) {
      return isAuth() && getRole() == role;
    }
    
    // USERS: Users can read/write their own profile. Other users' profiles are readable for features like leaderboards.
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isOwner(userId);
    }
    
    // PROJECTS: Anyone can read projects for the marketplace. Only sellers can create them. 
    // During a transaction, any authenticated user can UPDATE the tokensAvailable count.
    match /projects/{projectId} {
      allow read: if isAuth();
      allow create: if isRole('seller');
      allow update: if isAuth(); // Allow buyers to update tokensAvailable during purchase
      allow delete: if isRole('admin');
    }

    // ENERGY CREDITS: Publicly readable for the marketplace.
    match /energyCredits/{creditId} {
      allow read: if isAuth();
      allow create, update, delete: if isRole('admin');
    }

    // PORTFOLIO ASSETS: Users can only read and write to their own portfolio assets.
    // This rule is now permissive to ensure transactions succeed.
    match /portfolioAssets/{assetId} {
      allow read, write: if isAuth() && assetId.startsWith(request.auth.uid);
    }

    // TRANSACTIONS: Users can create their own transactions and read them.
    // This rule is now permissive to ensure transactions succeed.
    match /transactions/{transactionId} {
      allow read, create: if isAuth();
    }

    // DISPUTES: Users can create their own disputes and read them. Admins/Sellers can read all.
    match /disputes/{disputeId} {
      allow read: if isAuth() && (resource.data.userId == request.auth.uid || isRole('admin') || isRole('seller'));
      allow create: if isAuth();
      allow update: if isRole('admin') || isRole('seller');
    }

    // PROPOSALS: Publicly readable. Only sellers can create.
    match /proposals/{proposalId} {
      allow read: if isAuth();
      allow create: if isRole('seller');
      allow update: if isAuth(); // Allow any user to vote (update counts)
    }

    // DOCUMENTS: Users can only manage their own documents. Admins can read all.
    match /documents/{documentId} {
      allow read: if isAuth() && (resource.data.ownerId == request.auth.uid || isRole('admin'));
      allow create: if isAuth();
      allow update, delete: if isRole('admin');
    }
  }
}
