
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Allow any authenticated user to create a user profile for themselves
    // and read any other user's profile (for leaderboards etc.)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
    }

    // Allow any authenticated user to read projects and energy credits for the marketplace
    match /projects/{projectId} {
      allow read: if request.auth != null;
      // Allow sellers to create projects
      allow create: if isRole('seller');
      // Allow authenticated users to update tokensAvailable (for purchases)
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['tokensAvailable']);
    }

    match /energyCredits/{creditId} {
      allow read: if request.auth != null;
    }

    // Allow authenticated users to create and manage their own portfolio assets
    match /portfolioAssets/{portfolioId} {
      allow read, write: if request.auth != null;
    }

    // Allow authenticated users to create their own transactions
    match /transactions/{transactionId} {
      allow read, create: if request.auth != null;
    }

    // Allow authenticated users to file disputes
    // Allow admins/sellers to manage them
    match /disputes/{disputeId} {
      allow read, write: if request.auth != null;
    }

    // Allow sellers to create proposals
    // Allow any authenticated user to read and vote on proposals
    match /proposals/{proposalId} {
       allow read, write: if request.auth != null;
    }

    // Allow sellers to upload documents
    // Allow admins to read/update status
    match /documents/{documentId} {
      allow read, write: if request.auth != null;
    }
  }
}

    