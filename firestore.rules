
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, anyone can create a user profile (for signup)
    // and users can update their own profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null;
    }
    
    // Logged-in users can read projects and energy credits
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isOwner(resource.data.ownerId);
    }
    match /energyCredits/{creditId} {
      allow read: if request.auth != null;
    }
    
    // Transactions: 
    // - Users can create their own transactions (e.g. buying)
    // - Users can read transactions where they are the buyer (userId) or the seller (sellerId)
    match /transactions/{transactionId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read: if request.auth != null;
    }

    // Documents:
    // - Users can create documents for themselves
    // - Users can only read their own documents
    // - Admins can update document status
    match /documents/{documentId} {
        allow create, read: if isOwner(resource.data.ownerId);
        allow update: if request.auth.token.role == 'admin';
    }

    // Disputes:
    // - Users can create disputes for their own transactions.
    // - Users can read disputes they are involved in (as buyer or seller).
    // - Users can add messages to disputes they are involved in.
    // - Sellers can update the status of their disputes.
    // - Buyers can update a dispute to add a rating if it is resolved.
    match /disputes/{disputeId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read: if isOwner(resource.data.userId) || isOwner(resource.data.sellerId);
        allow update: if (isOwner(resource.data.sellerId) && request.resource.data.status != resource.data.status) || 
                       (isOwner(resource.data.userId) && resource.data.status == 'Resolved' && request.resource.data.rating != resource.data.rating);

        match /messages/{messageId} {
            allow create, read: if isOwner(request.auth.uid) && (isOwner(get(/databases/$(database)/documents/disputes/$(disputeId)).data.userId) || isOwner(get(/databases/$(database)/documents/disputes/$(disputeId)).data.sellerId));
        }
    }

    // Proposals:
    // - Authenticated users can read proposals.
    // - Authenticated users can create proposals.
    // - Logged-in users can vote (update vote counts).
    // - Proposers can update the status.
    match /proposals/{proposalId} {
        allow read, create: if request.auth != null;
        allow update: if request.auth != null;
    }
  }
}
