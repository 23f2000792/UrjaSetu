rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    match /projects/{projectId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.ownerId;
      // Allow any authenticated user to update a project (for token purchases).
      // The transaction logic on the client ensures the validity of the update.
      allow update: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.ownerId;
    }
    match /energyCredits/{creditId} {
        allow read: if true;
    }
    match /transactions/{transactionId} {
      // Allow user to read their own transactions, and sellers to read transactions for their projects
      allow read: if request.auth.uid == resource.data.userId || request.auth.uid == resource.data.sellerId;
      // Allow any authenticated user to create a transaction (buy an asset)
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    match /documents/{documentId} {
      allow read, write: if request.auth != null;
    }
    match /proposals/{proposalId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.proposerId == request.auth.uid;
      allow update: if request.auth != null; // Allow voting and status changes
    }
    match /disputes/{disputeId} {
      allow read, write: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.sellerId);
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }
    }
  }
}
