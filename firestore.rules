
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users
    match /users/{userId} {
      // Allow authenticated users to read all profiles for leaderboard, but only write to their own.
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Projects
    match /projects/{projectId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || (request.auth != null && request.auth.uid == resource.data.ownerId);
    }

    // Energy Credits
    match /energyCredits/{creditId} {
      allow read: if true;
    }

    // Transactions
    match /transactions/{transactionId} {
       // Allow authenticated users to read all transactions for leaderboard/activity feeds
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Notifications
    match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Documents
    match /documents/{documentId} {
        allow read, create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Disputes
    match /disputes/{disputeId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.sellerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow seller to update status, allow buyer to update rating
      allow update: if request.auth != null && 
                    ((request.auth.uid == resource.data.sellerId) || 
                     (request.auth.uid == resource.data.userId && request.resource.data.rating != resource.data.rating) && resource.data.status == 'Resolved');
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, create: if request.auth != null && (request.auth.uid == get(/databases/$(database)/documents/disputes/$(disputeId)).data.userId || request.auth.uid == get(/databases/$(database)/documents/disputes/$(disputeId)).data.sellerId);
      }
    }
    
    // Proposals
    match /proposals/{proposalId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null; // Simplistic rule, allows voting and status changes
    }
  }
}
