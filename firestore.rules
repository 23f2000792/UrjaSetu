rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isRole(role) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isProjectOwner(projectId) {
      let projectResource = get(/databases/$(database)/documents/projects/$(projectId)).data;
      return isSignedIn() && projectResource.ownerId == request.auth.uid;
    }

    // Collection Rules
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create; // Allow user creation during sign-up
      allow update: if isOwner(userId);
    }
    
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create: if isRole('seller');
      allow update: if isProjectOwner(projectId) && isRole('seller');
      allow delete: if isProjectOwner(projectId) && isRole('seller');
    }

    match /energyCredits/{creditId} {
      allow read: if isSignedIn();
    }
    
    match /portfolioAssets/{portfolioAssetId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      // create and update are handled within the purchase transaction rule
    }
    
    match /transactions/{transactionId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
       // create is handled within the purchase transaction rule
    }

    match /disputes/{disputeId} {
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isRole('admin') || isRole('seller'));
      allow create: if isRole('buyer');
      allow update: if isRole('admin') || isRole('seller');
    }

    match /documents/{documentId} {
      allow read, write: if isRole('admin') || isOwner(resource.data.ownerId);
    }
    
    match /proposals/{proposalId} {
      allow read: if isSignedIn();
      allow create: if isRole('seller');
      allow update(path, resource, requestResource): if isSignedIn(); // Allow voting
    }
    
    match /notifications/{notificationId} {
      allow read, write: if isOwner(resource.data.userId);
    }
  }
}
