rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    match /users/{userId} {
      allow read;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
    }

    match /documents/{docId} {
      allow create: if isAuthenticated();
      allow read: if isOwner(request.resource.data.ownerId) || getRole() == 'seller';
      allow update: if getRole() == 'seller';
    }

    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow create: if getRole() == 'seller';
      allow update: if getRole() == 'seller' && isOwner(resource.data.ownerId);
    }
    
    match /energyCredits/{creditId} {
        allow read: if isAuthenticated();
        allow create: if getRole() == 'seller';
    }

    match /disputes/{disputeId} {
      allow create: if isAuthenticated();
      allow read: if isOwner(resource.data.userId) || getRole() == 'seller';
      allow update: if getRole() == 'seller';
    }
    
    match /portfolioAssets/{assetId} {
        allow read: if isAuthenticated() && isOwner(resource.data.userId);
        allow create: if isAuthenticated(); // Typically done via a backend function
        allow update: if isAuthenticated() && isOwner(resource.data.userId); // Also via backend
    }
    
    match /proposals/{proposalId} {
        allow read: if isAuthenticated();
    }
  }
}
